
trigger:
  branches:
    exclude:
      - '*'

pr:
  branches:
    include:
      - '*'

variables:
    -group: Secret

pool:
  vmImage: 'ubuntu-latest'

schedules:
- cron: "0 0 * * 0"
  displayName: Weekly run
  branches:
    include:
      - '*'
  always: true

jobs:
- job: execute_tests
  displayName: 'Run Test Automation'
  steps:

  - script: |
      echo "Setting up environment variables"
      echo "##vso[task.setvariable variable=SECRET_TOKEN]$(SECRET_TOKEN)"
      echo "Printing secret token"
      echo $(SECRET_TOKEN)
    displayName: 'Setup Environment Variables'
    env:
      SECRET_TOKEN: $(key)

  - task: CmdLine@2
    inputs:
      script: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        sudo apt-get install -y openjdk-17-jre openjdk-17-jdk maven expect
        wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz && tar -zxvf allure-2.27.0.tgz -C /opt/ && sudo ln -s /opt/allure-2.27.0/bin/allure /usr/bin/allure
    displayName: 'Prepare Environment'

  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean install'
      options: '-DskipTests'
      jdkVersionOption: '1.17'
      jdkArchitectureOption: 'x64'
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false

  - script: |
      echo "Running Selenide TestNG tests"
      export DISPLAY=:99
      Xvfb :99 -screen 0 1024x768x24 &
      mvn test -Dsurefire.suiteXmlFiles=$(System.DefaultWorkingDirectory)/testng.xml -Dselenide.browser=chrome -Dselenide.headless=true -Dselenide.browserCapabilities.arguments="--headless,--no-sandbox,--disable-dev-shm-usage"
    displayName: 'Run Selenide TestNG Tests'
    continueOnError: true

  - script: |
      echo "Generating Allure Report"
      allure generate --clean $(System.DefaultWorkingDirectory)/allure-results -o $(System.DefaultWorkingDirectory)/allure-report
    displayName: 'Generate Allure Report'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(System.DefaultWorkingDirectory)/allure-results'
      artifactName: 'allure-results'
      publishLocation: 'pipeline'

  - task: PublishAllureReport@1
    inputs:
      allureVersion: '2.28.0'
      testResultsDir: '$(System.DefaultWorkingDirectory)/allure-results'
    displayName: 'Publish Report'